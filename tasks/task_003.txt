# Task ID: 3
# Title: Implement SQLite Database Integration
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Create database utilities to connect to and interact with the SQLite database, ensuring compatibility with the existing schema.
# Details:
1. Create a database connector using better-sqlite3
2. Implement the database schema matching the existing Python implementation
3. Create utility functions for common database operations:
   ```javascript
   // lib/db/index.js
   const Database = require('better-sqlite3');
   
   let db;
   
   function getDatabase() {
     if (!db) {
       db = new Database('path/to/database.sqlite', { verbose: console.log });
     }
     return db;
   }
   
   function closeDatabase() {
     if (db) {
       db.close();
       db = null;
     }
   }
   
   module.exports = {
     getDatabase,
     closeDatabase,
     // Add other database utility functions
   };
   ```
4. Implement data models for events, locations, and other entities
5. Create migration utilities to transfer data from the existing database
6. Implement transaction support for data integrity

# Test Strategy:
1. Unit test database connection and basic CRUD operations
2. Test migration of sample data from existing database
3. Verify schema compatibility with existing database
4. Benchmark database operations for performance
5. Test transaction rollback on error conditions
